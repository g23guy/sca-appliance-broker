#!/bin/bash

SVER=1.0.1

##############################################################################
#  setup-sca - Supportconfig Analysis Appliance Setup Tool
#  Copyright (C) 2013 SUSE LLC
#
# Description:  Sets up a standard local host configuration of the SCA 
#               appliance
# Modified:     2013 Dec 23
#
##############################################################################
#
#  This program is free software; you can redistribute it and/or modify
#  it under the terms of the GNU General Public License as published by
#  the Free Software Foundation; version 2 of the License.
#
#  This program is distributed in the hope that it will be useful,
#  but WITHOUT ANY WARRANTY; without even the implied warranty of
#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#  GNU General Public License for more details.
#
#  You should have received a copy of the GNU General Public License
#  along with this program; if not, write to the Free Software
#  Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
#
#  Authors/Contributors:
#     Jason Record (jrecord@suse.com)
#
##############################################################################

title() {
	echo "####################################################################"
	echo "# SCA Appliance Setup Tool v$SVER"
	echo "####################################################################"
	echo
}

showHelp() {
	[ -n "$1" ] && { echo "$1"; echo; }
	echo "Usage: $CURRENT_SCRIPT [OPTIONS]"
	echo
	echo 'Description:'
	echo '  Configures the MySQL administration and report database used by'
	echo '  the Supportconfig Analysis Tools.'
	echo
	echo 'Options:'
	echo '  -h Show this screen and exit'
	echo '  -c Do not clear the screen'
	echo '  -p <str> MySQL root password'
	echo '  -u <str> sca user password (Default: MySQL root password)'
	echo "  -e <email> Admin email address (Default: local root user)"
	echo "  -s <server_name> Override the server hostname"
	echo "  -f Change to FTP archive source file:///srv/ftp/upload (Default: $ARCHIVE_LOCATION)"
	echo '  -y Confirms the deletion of a pre-existing database and users'
	echo
}


FMT1="%-30s %s\n"
FMT2="%-30s "
PASS_MYSQL_ROOT=''
PASS_USER_SCA=''
EMAIL_USER_SCA=''
ARCHIVE_LOCATION='file:///tmp/'
CONFIRMED=''
USE_HOSTNAME=''
DAEMON_CHECK=1
CLEAR=1
while getopts ':bchp:u:e:fys:' TMPOPT
do
	case $TMPOPT in
		\:) title; showHelp "ERROR: Missing Argument -$OPTARG"; exit 1 ;;
		\?) title; showHelp "ERROR: Invalid Option -$OPTARG"; exit 2 ;;
		h) title; showHelp; exit 0 ;;
		b) DAEMON_CHECK=0 ;;
		c) CLEAR=0 ;;
		p) PASS_MYSQL_ROOT=$OPTARG ;;
		u) PASS_USER_SCA=$OPTARG ;;
		s) USE_HOSTNAME=$OPTARG ;;
		e) EMAIL_USER_SCA=$OPTARG ;;
		f) ARCHIVE_LOCATION="file:///srv/ftp/upload" ;;
		y) CONFIRMED='-y' ;;
	esac
done
[[ -z "$EMAIL_USER_SCA" ]] && EMAIL_USER_SCA="root"
[[ -z "$USE_HOSTNAME" ]] && USE_HOSTNAME=$HOSTNAME
(( CLEAR )) && clear
title
printf "$FMT2" "Pinging $USE_HOSTNAME"
if ping -c1 -w1 $USE_HOSTNAME &>/dev/null; then
	echo Done
else
	USE_HOSTNAME='localhost'
	echo "Failed, using $USE_HOSTNAME"
	printf "$FMT2" "Pinging $USE_HOSTNAME"
	if ping -c1 -w1 $USE_HOSTNAME &>/dev/null; then
		echo Done
	else
		echo FAILED
		echo "  Cannot ping $USE_HOSTNAME"; echo
		echo "  Fix the network or use -s to override the server name"; echo
		exit 2
	fi
fi

if rpm -q sca-appliance-agent &>/dev/null; then
	printf "$FMT1" "SCA Agent Package" "Installed"
else
	printf "$FMT1" "SCA Agent Package" "ERROR"
	echo "  Package not installed - sca-appliance-agent"; echo
	echo "  Install the SCA Appliance agent package"; echo
	exit 2
fi

if rpm -q sca-appliance-patdev &>/dev/null; then
	printf "$FMT1" "SDP Database Package" "Installed"
	INSTALL_SDP=1
else
	printf "$FMT1" "SDP Database Package" "Not Installed"
	INSTALL_SDP=0
fi

printf "$FMT2" "Additional Required Packages"
REQUIRED_PACKAGES='php5-bz2 php5-mbstring php5-mcrypt php5-mysql php5-zip php5-zlib'
MISSING_PACKAGES=''
for PACKAGE in $REQUIRED_PACKAGES
do
	if ! rpm -q $PACKAGE &>/dev/null; then
		MISSING_PACKAGES="$MISSING_PACKAGES $PACKAGE"
	fi
done
if [[ -n "$MISSING_PACKAGES" ]]; then
	echo ERROR
	echo "  Missing required packages"
	echo "  Install these packages: $MISSING_PACKAGES"
	echo "  Restart the apache2 daemon"; echo
	exit 2
else
	echo Installed
fi

printf "$FMT1" "Archive Location" "$ARCHIVE_LOCATION"
printf "$FMT1" "Administrator Email" "$EMAIL_USER_SCA"

if (( DAEMON_CHECK )); then
	printf "$FMT2" "Apache Daemon"
	if rpm -q systemd &>/dev/null; then
		systemctl status apache2.service &>/dev/null
		RC=$?
		if (( RC )); then
			echo ERROR
			if rpm -q apache2 &>/dev/null; then
				echo "  Apache not active"; echo
				echo "  Run: systemctl enable apache2.service; systemctl start apache2.service"; echo
				echo
				exit 1
			else
				echo "  Apache not installed"; echo
			fi
		else
			echo Active
		fi
	else
		DAEMON_BIN="/etc/init.d/apache2"
		if [[ -x $DAEMON_BIN ]]; then
			$DAEMON_BIN status &>/dev/null
			RC=$?
			if (( RC )); then
				echo ERROR
				echo "  Apache2 daemon is not active"; echo
				DAEMON_BASE=$(basename $DAEMON_BIN)
				echo "  Run: chkconfig $(basename $DAEMON_BASE) on; $DAEMON_BIN start"; echo
				echo
				exit 1
			else
				echo Active
			fi
		else
			echo ERROR
			echo "  Missing daemon $DAEMON_BIN"; echo
			echo "  Install the Apache2 packages"; echo
			exit 1
		fi
	fi

	DAEMON_BIN="/etc/init.d/mysql"
	printf "$FMT2" "MySQL Daemon"
	if [[ -x $DAEMON_BIN ]]; then
		$DAEMON_BIN status &>/dev/null
		RC=$?
		if (( RC )); then
			echo ERROR
			echo "  MySQL daemon is not active"; echo
			DAEMON_BASE=$(basename $DAEMON_BIN)
			echo "  Run: chkconfig $(basename $DAEMON_BASE) on; $DAEMON_BIN start"; echo
			echo
			exit 1
		else
			echo Active
			if [[ -z "$PASS_MYSQL_ROOT" ]]; then
				printf "%s" " Enter MySQL root password: "
				read -s PASS_MYSQL_ROOT
				echo
			else
				printf "$FMT1" "MySQL Root Password" "Set"
			fi
			DB_ROOT="-u root -p${PASS_MYSQL_ROOT}"

			DATABASES=$(mysql $DB_ROOT -NB -e "show databases" 2>/dev/null)
			printf "$FMT2" "MySQL Database Access"
			if [[ -n "$DATABASES" ]]; then
				echo Confirmed
			else
				echo ERROR
				echo "  Cannot access MySQL database"; echo
				echo "  Confirm MySQL database root password"; echo
				exit 2
			fi
		fi
	else
		echo ERROR
		echo "  Missing daemon $DAEMON_BIN"; echo
		echo "  Install the MySQL database packages"; echo
		exit 1
	fi
else
	printf "$FMT1" "Apache Daemon" "Not Checked"
	printf "$FMT1" "MySQL Daemon" "Not Checked"
fi

if (( INSTALL_SDP )); then
	if echo "$DATABASES" | grep SCAPatterns &>/dev/null; then
		printf "$FMT1" "SDP Database" "Already Installed"
	else
		printf "$FMT2" "SDP Database Configuration"
		TMP=$(mktemp /tmp/setup-sca-sdp-XXXXXXXXXXXXXXX)
		/opt/sca/bin/setup-sdp -c -p $PASS_MYSQL_ROOT &>$TMP
		ERR=$?
		if (( ERR > 0 )); then
			echo ERROR
			cat $TMP; rm -f $TMP; echo
			exit 1
		else
			echo Done
			sleep 1
		fi
	fi
else
	echo Skipped
fi

if echo "$DATABASES" | grep ServerDiagnostics &>/dev/null; then
	printf "$FMT1" "SCA Database" "Already Installed"
	echo
	exit 2
fi

printf "$FMT2" "SCA Broker Setup"
TMP=$(mktemp /tmp/setup-sca-sdbroker-XXXXXXXXXXXXXXX)
/opt/sca/bin/setup-sdbroker -c -p $PASS_MYSQL_ROOT -b sdbroker_password -e $EMAIL_USER_SCA -i $ARCHIVE_LOCATION &>$TMP
ERR=$?
if (( ERR > 0 )); then
	echo ERROR
	cat $TMP; rm -f $TMP; echo
	exit 1
else
	echo Done
	sleep 1
fi

printf "$FMT2" "SCA Agent Setup"
TMP=$(mktemp /tmp/setup-sca-sdagent-XXXXXXXXXXXXXXX)
/opt/sca/bin/setup-sdagent -c -h $USE_HOSTNAME -p $PASS_MYSQL_ROOT &>$TMP
ERR=$?
if (( ERR > 0 )); then
	echo ERROR
	cat $TMP; rm -f $TMP; echo
	exit 1
else
	echo Done
	sleep 1
fi

printf "$FMT2" "SCA Agent Configuration"
TMP=$(mktemp /tmp/setup-sca-sdagent-config-XXXXXXXXXXXXXXX)
/opt/sca/bin/sdagent-config -c -h $USE_HOSTNAME -l $USE_HOSTNAME -p sdagent_password -e $EMAIL_USER_SCA -i $ARCHIVE_LOCATION &>$TMP
ERR=$?
if (( ERR > 0 )); then
	echo ERROR
	cat $TMP; rm -f $TMP; echo
	exit 1
else
	echo Done
	sleep 1
fi

crontab /usr/share/doc/packages/sca/combined.cron
printf "$FMT1" "Install Cron Entries" "Done"

if [[ -z "$PASS_USER_SCA" ]]; then
	PASS_USER_SCA=$PASS_MYSQL_ROOT
	PASS_USER_SCA_TEXT='Assigned (MySQL Root Password)'
else
	PASS_USER_SCA_TEXT='Set'
fi
printf "$FMT1" "Scdiag User Password" "$PASS_USER_SCA_TEXT"
echo $PASS_USER_SCA | passwd --stdin sca &>/dev/null

rm -f /tmp/setup-sca-*
echo


